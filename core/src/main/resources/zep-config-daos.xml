<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- Transaction Support -->
    <tx:annotation-driven/>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- JDBC Datasource -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://${zep.jdbc.hostname}:${zep.jdbc.port}/${zep.jdbc.dbname}?characterEncoding=UTF-8&amp;autoReconnect=true&amp;rewriteBatchedStatements=true"/>
        <property name="username" value="${zep.jdbc.username}"/>
        <property name="password" value="${zep.jdbc.password}"/>
        <property name="initialSize" value="${zep.jdbc.pool.initial_size:3}" />
        <property name="maxActive" value="${zep.jdbc.pool.max_active:10}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="defaultAutoCommit" value="false" />
        <property name="validationQuery" value="SELECT 1" />
        <property name="defaultTransactionIsolation" value="2" />
        <property name="poolPreparedStatements" value="${zep.jdbc.pool.pool_prepared_statements:true}" />
        <property name="maxOpenPreparedStatements" value="${zep.jdbc.max_open_prepared_statements:1000}" />
    </bean>

    <!-- Partition configuration -->
    <bean id="partitionConfig" class="org.zenoss.zep.dao.impl.PartitionConfig">
        <constructor-arg index="0" ref="zepPartitioningProps"/>
    </bean>

    <!-- DAO -->
    <bean id="eventDaoHelper" class="org.zenoss.zep.dao.impl.EventDaoHelper">
        <property name="dataSource" ref="dataSource"/>
        <property name="daoCache" ref="daoCache"/>
    </bean>
    <bean id="eventDao" class="org.zenoss.zep.dao.impl.EventDaoImpl">
        <constructor-arg index="0" ref="dataSource"/>
        <constructor-arg index="1" value="${zep.jdbc.dbname}"/>
        <constructor-arg index="2" ref="partitionConfig"/>
        <property name="eventDaoHelper" ref="eventDaoHelper"/>
    </bean>
    <bean id="eventSummaryDao" class="org.zenoss.zep.dao.impl.EventSummaryDaoImpl">
        <constructor-arg index="0" ref="dataSource"/>
        <property name="eventDaoHelper" ref="eventDaoHelper"/>
    </bean>
    <bean id="eventArchiveDao" class="org.zenoss.zep.dao.impl.EventArchiveDaoImpl">
        <constructor-arg index="0" ref="dataSource"/>
        <constructor-arg index="1" value="${zep.jdbc.dbname}"/>
        <constructor-arg index="2" ref="partitionConfig"/>
        <property name="eventDaoHelper" ref="eventDaoHelper"/>
    </bean>
    <bean id="eventTriggerDao" class="org.zenoss.zep.dao.impl.EventTriggerDaoImpl">
        <constructor-arg index="0" ref="dataSource"/>
        <property name="eventSignalSpoolDao" ref="eventSignalSpoolDao" />
    </bean>
    <bean id="eventSignalSpoolDao" class="org.zenoss.zep.dao.impl.EventSignalSpoolDaoImpl">
        <constructor-arg index="0" ref="dataSource" />
    </bean>
    <bean id="eventTriggerSubscriptionDao" class="org.zenoss.zep.dao.impl.EventTriggerSubscriptionDaoImpl">
        <constructor-arg index="0" ref="dataSource" />
    </bean>
    <bean id="daoCache" class="org.zenoss.zep.dao.impl.DaoCacheImpl" init-method="init">
        <constructor-arg index="0" ref="dataSource"/>
    </bean>
    <bean id="configDao" class="org.zenoss.zep.dao.impl.ConfigDaoImpl">
        <constructor-arg index="0" ref="dataSource"/>
        <constructor-arg index="1" ref="partitionConfig"/>
        <property name="maxEventArchiveIntervalDays" value="${zep.max_event_archive_interval_days:30}" />
    </bean>
    <bean id="indexMetadataDao" class="org.zenoss.zep.dao.impl.IndexMetadataDaoImpl">
        <constructor-arg index="0" ref="dataSource" />
        <constructor-arg index="1" ref="zepInstance" />
    </bean>
    <bean id="heartbeatDao" class="org.zenoss.zep.dao.impl.HeartbeatDaoImpl">
        <constructor-arg index="0" ref="dataSource" />
    </bean>

    <!-- Indexing DAO -->
    <bean id="eventDetailsConfigDao" class="org.zenoss.zep.dao.impl.EventDetailsConfigDaoImpl">
        <constructor-arg index="0" ref="dataSource" />
    </bean>

    <bean id="luceneMaxFieldLength" class="org.apache.lucene.index.IndexWriter$MaxFieldLength">
        <constructor-arg index="0" value="${zep.index.maximum_field_length}" />
    </bean>

    <bean id="luceneSummaryDir" class="org.apache.lucene.store.FSDirectory"
            factory-method="open" destroy-method="close">
        <constructor-arg value="${zep.index.dir}/summary" />
    </bean>

    <bean id="luceneAnalyzer" class="org.zenoss.zep.index.impl.EventIndexMapper"
          factory-method="createAnalyzer" destroy-method="close">
    </bean>

    <bean id="luceneSummaryIndexWriter" class="org.apache.lucene.index.IndexWriter" destroy-method="close">
        <constructor-arg index="0" ref="luceneSummaryDir"/>
        <constructor-arg index="1" ref="luceneAnalyzer"/>
        <constructor-arg index="2" ref="luceneMaxFieldLength"/>
        <property name="RAMBufferSizeMB" value="${zep.index.ram_buffer_size_mb:16.0}"/>
    </bean>

    <bean id="eventSummaryIndexDao" class="org.zenoss.zep.index.impl.EventIndexDaoImpl" destroy-method="shutdown">
        <qualifier value="summary"/>
        <constructor-arg value="event_summary"/>
        <constructor-arg ref="luceneSummaryIndexWriter"/>
        <property name="queryLimit" value="${zep.query.limit}" />
    </bean>

    <bean id="luceneArchiveDir" class="org.apache.lucene.store.FSDirectory"
            factory-method="open" destroy-method="close">
        <constructor-arg value="${zep.index.dir}/archive" />
    </bean>

    <bean id="luceneArchiveIndexWriter" class="org.apache.lucene.index.IndexWriter" destroy-method="close">
        <constructor-arg index="0" ref="luceneArchiveDir"/>
        <constructor-arg index="1" ref="luceneAnalyzer"/>
        <constructor-arg index="2" ref="luceneMaxFieldLength"/>
        <property name="RAMBufferSizeMB" value="${zep.index.ram_buffer_size_mb:16.0}"/>
    </bean>

    <bean id="eventArchiveIndexDao" class="org.zenoss.zep.index.impl.EventArchiveIndexDaoImpl"
          destroy-method="shutdown">
        <qualifier value="archive"/>
        <constructor-arg value="event_archive"/>
        <constructor-arg ref="luceneArchiveIndexWriter"/>
        <constructor-arg ref="eventSummaryIndexDao"/>
        <property name="queryLimit" value="${zep.query.limit}" />
    </bean>

    <bean id="eventStoreDao" class="org.zenoss.zep.dao.impl.EventStoreDaoImpl">
        <property name="eventSummaryDao" ref="eventSummaryDao" />
        <property name="eventArchiveDao" ref="eventArchiveDao" />
        <property name="eventSummaryIndexDao" ref="eventSummaryIndexDao" />
        <property name="eventArchiveIndexDao" ref="eventArchiveIndexDao" />
    </bean>

    <bean id="eventIndexer" class="org.zenoss.zep.index.impl.EventIndexerImpl">
        <constructor-arg index="0" ref="dataSource"/>
        <constructor-arg index="1" value="${zep.index.interval_seconds:1}" />
        <constructor-arg index="2" value="${zep.index.interval_window:30}" />
        <property name="eventSummaryIndexDao" ref="eventSummaryIndexDao" />
        <property name="eventArchiveIndexDao" ref="eventArchiveIndexDao" />
        <property name="eventDaoHelper" ref="eventDaoHelper"/>
        <property name="pluginService" ref="pluginService"/>
        <property name="indexMetadataDao" ref="indexMetadataDao" />
        <property name="eventDetailsConfigDao" ref="eventDetailsConfigDao"/>
    </bean>

</beans>
